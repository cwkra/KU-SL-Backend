# Generated by Django 4.2.7 on 2024-02-20 17:56

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id_number', models.CharField(max_length=10, unique=True)),
                ('faculty', models.CharField(choices=[('Agriculture', 'เกษตร'), ('Business Administration', 'บริหารธุรกิจ'), ('Fisheries', 'ประมง'), ('Humanities', 'มนุษยศาสตร์'), ('Forestry', 'วนศาสตร์'), ('Science', 'วิทยาศาสตร์'), ('Engineering', 'วิศวกรรมศาสตร์'), ('Education', 'ศึกษาศาสตร์'), ('Economics', 'เศรษฐศาสตร์'), ('Architecture', 'สถาปัตยกรรมศาสตร์'), ('Social Sciences', 'สังคมศาสตร์'), ('Veterinary Medicine', 'สัตวแพทยศาสตร์'), ('Argo-Industry', 'อุตสาหกรรมเกษตร'), ('Veterinary Technology', 'เทคนิคการสัตวแพทย์'), ('Environment', 'สิ่งแวดล้อม'), ('Medicine', 'แพทยศาสตร์'), ('Nursing', 'พยาบาลศาสตร์'), ('Interdisciplinary Management and Technology', 'สหวิทยาการจัดการและเทคโนโลยี'), ('Integrated Science', 'วิทยาลัยบูรณาการศาสตร์'), ('The Graduate School', 'บัณฑิตวิทยาลัย'), ('International Studies Establishment Project', 'โครงการจัดตั้งวิทยาลัยนานาชาติ')], max_length=150)),
                ('department', models.CharField(choices=[('Entomology', 'กีฏวิทยา'), ('Farm Mechanics', 'เกษตรกลวิธาน'), ('Home Economics', 'คหกรรมศาสตร์'), ('Soil Science', 'ปฐพีวิทยา'), ('Agronomy', 'พืชไร่นา'), ('Horticulture', 'พืชสวน'), ('Plant Pathology', 'โรคพืช'), ('Agricultural Extension and Communication', 'ส่งเสริมและนิเทศศาสตร์เกษตร'), ('Animal Science', 'สัตวบาล'), ('Finance', 'การเงิน'), ('Management', 'การจัดการ'), ('Operations Management', 'การจัดการเทคโนโลยีและการปฏิบัติการ'), ('Marketing', 'การตลาด'), ('Accounting', 'บัญชี'), ('Fishery Management', 'การจัดการประมง'), ('Fishery Biology', 'ชีววิทยาประมง'), ('Fishery Products', 'ผลิตภัณฑ์ประมง'), ('Aquaculture', 'เพาะเลี้ยงสัตว์น้ำ'), ('Marine Science', 'วิทยาศาสตร์ทางทะเล'), ('Music', 'ดนตรี'), ('Communication Arts and Information Science', 'นิเทศศาสตร์และสารสนเทศศาสตร์'), ('Foreign Languages', 'ภาษาต่างประเทศ'), ('Literature', 'วรรณคดี'), ('Linguistics', 'ภาษาศาสตร์'), ('Thai Language', 'ภาษาไทย'), ('Eastern Languages', 'ภาษาตะวันออก'), ('Philosophy and Religion', 'ปรัชญาและศาสนา'), ('Tourism and Hospitality Industry', 'อุตสาหกรรมท่องเที่ยวและบริการ'), ('Forest Management', 'การจัดการป่าไม้'), ('Forest Biology', 'ชีววิทยาป่าไม้'), ('Forest Engineering', 'วิศวกรรมป่าไม้'), ('Forest Products', 'วนผลิตภัณฑ์'), ('Silviculture', 'วนวัฒนวิทยา'), ('Conservation', 'อนุรักษวิทยา'), ('Mathematics', 'คณิตศาสตร์'), ('Chemistry', 'เคมี'), ('Microbiology', 'จุลชีววิทยา'), ('Biochemistry', 'ชีวเคมี'), ('Botany', 'พฤกษศาสตร์'), ('Genetics', 'พันธุศาสตร์'), ('Physics', 'ฟิสิกส์'), ('Applied Radiation and Isotope', 'รังสีประยุกต์และไอโซโทป'), ('Computer Science', 'วิทยาการคอมพิวเตอร์'), ('Earth Science', 'วิทยาศาสตร์พื้นพิภพ'), ('Materials Science', 'วัสดุศาสตร์'), ('Statistics', 'สถิติ'), ('Zoology', 'สัตววิทยา'), ('Aerospace Engineering', 'วิศวกรรมการบินและอวกาศ'), ('Computer Engineering', 'วิศวกรรมคอมพิวเตอร์'), ('Chemical Engineering', 'วิศวกรรมเคมี'), ('Mechanical Engineering', 'วิศวกรรมเครื่องกล'), ('Water Resources Engineering', 'วิศวกรรมทรัพยากรน้ำ'), ('Electrical Engineering', 'วิศวกรรมไฟฟ้า'), ('Materials Engineering', 'วิศวกรรมวัสดุ'), ('Civil Engineering', 'วิศวกรรมโยธา'), ('Environmental Engineering', 'วิศวกรรมสิ่งแวดล้อม'), ('Industrial Engineering', 'วิศวกรรมอุตสาหการ'), ('Education', ''), ('Educational Psychology and Guidance', ''), ('Educational Technology', ''), ('Physical Education', ''), ('Vocational Education', ''), ('Economics', 'เศรษฐศาสตร์'), ('Agricultural and Resource Economics', 'เศรษฐศาสตร์เกษตรและทรัพยากร'), ('Cooperative', 'สหกรณ์'), ('Architecture', 'สถาปัตยกรรม'), ('Landscape Architecture', 'ภูมิสถาปัตยกรรม'), ('Building Innovation and Technology', 'นวัตกรรมอาคาร'), ('Psychology', 'จิตวิทยา'), ('Law', 'นิติศาสตร์'), ('History', 'ประวัติศาสตร์'), ('Geography', 'ภูมิศาสตร์'), ('Political Science and Public Administration', 'รัฐศาสตร์และรัฐประศาสนศาษตร์'), ('Sociology and Anthropology', 'สังคมวิทยาและมานุษยวิทยา'), ('Graduate Interdisciplinary Program in Social Development', 'โครงการสหวิทยาการระดับบัณฑิตศึกษา สาขาพัฒนาสังคม'), ('Special Program in Southeast Asian Studies', 'โครงการเอเชียตะวันออกเฉียงใต้ภาคพิเศษ'), ('Anatomy', 'กายวิภาคศาสตร์'), ('Physiology', 'สรีรวิทยา'), ('Microbiology and Immunology', 'จุลชีววิทยาและวิทยาภูมิคุ้มกัน'), ('Pharmacology', 'เภสัชวิทยา'), ('Pathology', 'พยาธิวิทยา'), ('Parasitology', 'ปรสิตวิทยา'), ('Agro-Industrial Technology', 'เทคโนโลยีอุตสาหกรรมเกษตร'), ('Biotechnology', 'เทคโนโลยีชีวภาพ'), ('Food Science & Technology', 'วิทยาศาสตร์และเทคโนโลยีการอาหาร'), ('Packaging & Materials Technology', 'เทคโนโลยีการบรรจุ และวัสดุ'), ('Product Development', 'พัฒนาผลิตภัณฑ์'), ('Textile Science', 'วิทยาการสิ่งทอ'), ('Agro-Industrial Innovation and Technology (International Program) (AIIP)', 'นวัตกรรมและเทคโนโลยีอุตสาหกรรมเกษตร (หลักสูตรนานาชาติ)'), ('Veterinary Technology', 'เทคนิคการสัตวแพทย์'), ('Animal Nursing (Special Program)', 'สาขาวิชาการพยาบาลสัตว์ (ภาคพิเศษ)'), ('Veterinary Technology (Special Program)', 'สาขาวิชาเทคนิคการสัตวแพทย์ (ภาคพิเศษ)'), ('Environmental Technology and Management', 'เทคโนโลยีและการจัดการสิ่งแวดล้อม'), ('Environmental Science', 'วิทยาศาสตร์สิ่งแวดล้อม'), ('Medicine', 'แพทยศาสตร์'), ('Nursing Science', 'พยาบาลศาสตร์'), ('Cultural and Health Tourism Management', 'การจัดการท่องเที่ยวเชิงวัฒนธรรมและสุขภาพ'), ('Hospitality Industry Management', 'การจัดการอุตสาหกรรมการบริการ')], max_length=150)),
                ('education_level', models.CharField(choices=[('BACHELOR_DEGREE', 'ปริญญาตรี'), ('MASTER_DEGREE', 'ปริญญาโท'), ('DOCTOR_DEGREE', 'ปริญญาเอก')], max_length=150)),
                ('status', models.CharField(choices=[('NEW_BORROWER', 'ผู้กู้ยืมรายใหม่'), ('OLD_BORROWER', 'ผู้กู้ยืมรายเก่า')], default='NEW_BORROWER', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('date_of_birth', models.DateField()),
                ('tel_number', models.CharField(max_length=20, unique=True)),
                ('identity_card_number', models.CharField(max_length=13, unique=True)),
                ('image', models.ImageField(upload_to='private/profile/')),
                ('education', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.education')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
